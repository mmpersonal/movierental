<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CatalogService</name>
    </assembly>
    <members>
        <member name="T:MovieRental.API.CatalogService">
            <summary>
            Supports Servies for Movie Catalog that can be used to build Discovery experience of movies for consumer before renting
            Browse Movies by Genre, rating , availability to rent 
            </summary>
        </member>
        <member name="M:MovieRental.API.CatalogService.GetAvailableMovies">
            <summary>
            Gets summary data for all movies that are available to rent from the catalog/inventory
            </summary>
            <returns>Summary metdata for movies such as description,title,thumbnail, rating, genre, release Year</returns>
        </member>
        <member name="M:MovieRental.API.CatalogService.GetAllMovies">
            <summary>
            Gets summary data for all movies from the catalog/inventory
            </summary>
            <returns>Summary metdata for movies such as description,title,thumbnail, rating, genre, release Year</returns>
        </member>
        <member name="M:MovieRental.API.CatalogService.SubmitMovie(MovieRental.DataModel.Connect.MoviePersonDetails)">
            <summary>
            Submits metadata about the movie to the catalog/inventory. Adds the movie metadata into catalog
            </summary>
            <returns>status code and as movieId ( unique identifier for the movie in the catalog). 
            Unique movieId should be used for update/remove operations in the service to update and remove the movie in the catalog respectively</returns>
        </member>
        <member name="M:MovieRental.API.CatalogService.UpdateMovie(MovieRental.DataModel.Connect.MoviePersonDetails)">
            <summary>
            Update the movie information in the catalog/inventory. you will need movieId to update the movie information and personId to update the peeps information in the catalog
            MovieId and PersonId can be retrieved by GetMoviebyName, GetMovieByGenre etc
            </summary>
            <returns>status code and as movieId ( unique identifier for the movie in the catalog). 
            Unique movieId should be used for update/remove operations in the service to update and remove the movie in the catalog respectively</returns>
        </member>
        <member name="M:MovieRental.API.CatalogService.GetMoviesByCategory(MovieRental.DataModel.Connect.CategoryEnum)">
            <summary>
            Get all movies metdata by category/genre
            </summary>
            <param name="category/genre/genre"> Genre/Category Enum values of the movie such as Action</param>
            <returns>Statuscode and the list of Movie object that has Summary metdata for movies such as description,title,thumbnail, rating, genre, release Year</returns>
        </member>
        <member name="M:MovieRental.API.CatalogService.GetMoviesByRating(MovieRental.DataModel.Connect.RatingEnum)">
            <summary>
            Get all movies metdata by MPAA rating 
            </summary>
            <param name="rating">MPAA rating enum such as G</param>
            <returns>Statuscode and the list of Movie object that has Summary metdata for movies such as description,title,thumbnail, rating, genre, release Year</returns>
        </member>
        <member name="M:MovieRental.API.ICatalogService.GetAvailableMovies">
            <summary>
            Gets summary data for all movies that are available to rent from the catalog/inventory
            </summary>
            <returns>Summary metdata for movies such as description,title,thumbnail, rating, genre, release Year</returns>
        </member>
        <member name="M:MovieRental.API.ICatalogService.GetAllMovies">
            <summary>
            Gets summary data for all movies from the catalog/inventory
            </summary>
            <returns>Summary metdata for movies such as description,title,thumbnail, rating, genre, release Year</returns>
        </member>
        <member name="M:MovieRental.API.ICatalogService.SubmitMovie(MovieRental.DataModel.Connect.MoviePersonDetails)">
            <summary>
            Submits metadata about the movie to the catalog/inventory. Adds the movie metadata into catalog
            </summary>
            <returns>status code and as movieId ( unique identifier for the movie in the catalog). 
            Unique movieId should be used for update/remove operations in the service to update and remove the movie in the catalog respectively</returns>
        </member>
        <member name="M:MovieRental.API.ICatalogService.UpdateMovie(MovieRental.DataModel.Connect.MoviePersonDetails)">
            <summary>
            Update the movie information in the catalog/inventory. you will need movieId to update the movie information and personId to update the peeps information in the catalog
            MovieId and PersonId can be retrieved by GetMoviebyName, GetMovieByGenre etc
            </summary>
            <returns>status code and as movieId ( unique identifier for the movie in the catalog). 
            Unique movieId should be used for update/remove operations in the service to update and remove the movie in the catalog respectively</returns>
        </member>
        <member name="M:MovieRental.API.ICatalogService.GetAvailabilityStatus(System.Int32)">
            <summary>
            Get availability to rent status for a given movie Id
            </summary>
            <param name="MovieId">Unique identifier in movie rental catalog. MovieId from getAllMovies() or GetMoviesBycategory/getMoviesbyrating call</param>
            <returns>connectresult that abstracts the statuscode and data object that holds boolean value</returns>
        </member>
        <member name="M:MovieRental.API.ICatalogService.GetMoviesByCategory(MovieRental.DataModel.Connect.CategoryEnum)">
            <summary>
            Get all movies metdata by category/genre
            </summary>
            <param name="category/genre/genre"> Genre/Category Enum values of the movie such as Action</param>
            <returns>Statuscode and the list of Movie object that has Summary metdata for movies such as description,title,thumbnail, rating, genre, release Year</returns>
        </member>
        <member name="M:MovieRental.API.ICatalogService.GetMoviesByRating(MovieRental.DataModel.Connect.RatingEnum)">
            <summary>
            Get all movies metdata by MPAA rating 
            </summary>
            <param name="rating">MPAA rating enum such as G</param>
            <returns>Statuscode and the list of Movie object that has Summary metdata for movies such as description,title,thumbnail, rating, genre, release Year</returns>
        </member>
    </members>
</doc>
